{"version":3,"sources":["app/pointer-lock-controls/PointerLockControls.js","app/scene/params.js","app/pointer-lock-controls/index.js","app/side-drawer/list-section/styles.js","app/side-drawer/list-section/index.js","app/side-drawer/list-section/ListSection.js","state/action-types.js","state/fog/selectors.js","state/terrain/selectors.js","state/water/selectors.js","app/side-drawer/options.js","app/side-drawer/styles.js","app/side-drawer/index.js","app/side-drawer/SideDrawer.js","state/fog/actions.js","state/terrain/actions.js","state/water/actions.js","app/instructions/styles.js","app/instructions/index.js","app/instructions/Instructions.js","app/scene/terrain/TerrainGenerator.js","shaders/noise/perlin-noise.glsl","app/scene/terrain/TerrainShaderMaterial.js","app/scene/terrain/index.js","app/scene/terrain/Terrain.js","app/scene/water/WaterShaderMaterial.js","shaders/water/water.vs.glsl","shaders/water/water.fs.glsl","app/scene/water/index.js","app/scene/water/Water.js","app/scene/tiles/index.js","app/scene/tiles/Tiles.js","app/scene/index.js","app/scene/Scene.js","state/terrain/reducers.js","state/fog/reducers.js","state/water/reducers.js","state/store.js","app/theme.js","app/styles.js","app/index.js","app/App.js","index.js"],"names":["extend","PointerLockControlsImpl","PointerLockControls","movementSpeed","controls","useRef","useThree","camera","domElement","gl","clock","useMemo","THREE","useState","moveForward","setMoveForward","moveBack","setMoveBack","moveLeft","setMoveLeft","moveRight","setMoveRight","moveUp","setMoveUp","moveDown","setMoveDown","useFrame","current","isLocked","delta","getDelta","distance","Number","position","y","onMouseDown","lock","onKeyDown","e","keyCode","KeyCode","onKeyUp","useEffect","addEventListener","document","removeEventListener","ref","args","defaultProps","type","useStyles","makeStyles","theme","listItemText","width","spacing","ListSection","memo","sectionName","optionsEnum","options","setOptions","styles","ListSubheader","map","displayName","name","min","max","step","ListItem","dense","key","ListItemText","className","Slider","component","color","valueLabelDisplay","value","onChange","TerrainAction","Object","freeze","OPTIONS","RESET_OPTIONS","FogAction","WaterAction","getFogOptions","state","fog","getTerrainOptions","terrain","getWaterOptions","water","FogOptions","TerrainOptions","WaterOptions","sideDrawer","overflowX","list","display","flexDirection","height","flexGrow","resetButton","palette","secondary","light","SideDrawer","dispatch","useDispatch","terrainOptions","useSelector","fogOptions","waterOptions","fogSetOptions","useCallback","setFogOptions","terrainSetOptions","setTerrainOptions","waterSetOptions","setWaterOptions","Drawer","variant","classes","paper","List","Box","button","onClick","primary","backdrop","left","zIndex","drawer","Instructions","open","setOpen","Backdrop","Typography","align","paragraph","terrainMap","process","params","lights","directional","direction","normalize","intensity","hemisphere","skyColor","groundColor","density","size","divisions","rotation","Math","PI","colorMap","colorMapScale","normalMap","displacementMap","roughnessMap","metalness","uniforms","heightMajor","spacingMajor","heightMinor","spacingMinor","speed","kAmbient","kDiffuse","kSpecular","shininess","baseColor","tileSideLength","epsilon","TerrainGenerator","this","gpu","GPU","elevationKernel","createKernel","setDynamicOutput","setArgumentTypes","vertices","addNativeFunction","numVertices","setOutput","TerrainShaderMaterial","props","side","sceneParams","textureLoader","load","wrapS","wrapT","repeat","set","updateMatrix","normalMapType","Terrain","tileOffsets","numTiles","tiles","Array","keys","planes","createRef","terrainGenerator","terrainShaderMaterial","context","getContext","maxTextureSize","getParameter","MAX_TEXTURE_SIZE","forEach","offset","offsetIndex","attributes","geometry","array","i","length","push","vertexBatchSize","vertexBatch","slice","terrainElevations","generateElevation","j","needsUpdate","index","String","material","attach","WaterShaderMaterial","vertexShader","fragmentShader","assign","time","Water","waterShaderMaterial","Date","getTime","Tiles","sideLength","tileSize","x","tileX","floor","tileY","newTiles","prev","next","Scene","getOffsets","setTileOffsets","z","newTileOffsets","offsetsAreEqual","initialState","action","update","$set","store","compose","applyMiddleware","createStore","combineReducers","createMuiTheme","app","canvas","background","stats","top","right","bottom","marginRight","marginBottom","App","ThemeProvider","gl2","makeDefault","logger","useDefaults","formatter","messages","unshift","level","RootComponent","WEBGL","isWebGL2Available","getWebGL2ErrorMessage","textContent","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.45af9cb8.chunk.js","sourcesContent":["import React, {\n  useMemo,\n  useEffect,\n  useRef,\n  useState,\n} from 'react';\nimport { extend, useFrame, useThree } from 'react-three-fiber';\nimport * as THREE from 'three';\nimport { PointerLockControls as PointerLockControlsImpl }\n  from 'three/examples/jsm/controls/PointerLockControls';\nimport * as KeyCode from 'keycode-js';\nimport PropTypes from 'prop-types';\n\nextend({ PointerLockControlsImpl });\n\nconst PointerLockControls = ({ movementSpeed }) => {\n  const controls = useRef();\n  const { camera, gl: { domElement } } = useThree();\n  const clock = useMemo(() => new THREE.Clock(), []);\n\n  const [moveForward, setMoveForward] = useState(false);\n  const [moveBack, setMoveBack] = useState(false);\n  const [moveLeft, setMoveLeft] = useState(false);\n  const [moveRight, setMoveRight] = useState(false);\n  const [moveUp, setMoveUp] = useState(false);\n  const [moveDown, setMoveDown] = useState(false);\n\n  useFrame(() => {\n    if (!controls.current.isLocked) {\n      return;\n    }\n\n    const delta = clock.getDelta();\n\n    if (moveForward || moveBack) {\n      const distance = (Number(moveForward) - Number(moveBack)) * delta * movementSpeed;\n      controls.current.moveForward(distance);\n    }\n    if (moveLeft || moveRight) {\n      const distance = (Number(moveRight) - Number(moveLeft)) * delta * movementSpeed;\n      controls.current.moveRight(distance);\n    }\n    if (moveUp || moveDown) {\n      const distance = (Number(moveUp) - Number(moveDown)) * delta * movementSpeed;\n      camera.position.y += distance;\n    }\n  });\n\n  const onMouseDown = () => {\n    controls.current.lock();\n  };\n\n  const onKeyDown = (e) => {\n    switch (e.keyCode) {\n      case KeyCode.KEY_W:\n        setMoveForward(true);\n        break;\n      case KeyCode.KEY_S:\n        setMoveBack(true);\n        break;\n      case KeyCode.KEY_A:\n        setMoveLeft(true);\n        break;\n      case KeyCode.KEY_D:\n        setMoveRight(true);\n        break;\n      case KeyCode.KEY_SPACE:\n        setMoveUp(true);\n        break;\n      case KeyCode.KEY_SHIFT:\n        setMoveDown(true);\n        break;\n      default:\n        break;\n    }\n  };\n\n  const onKeyUp = (e) => {\n    switch (e.keyCode) {\n      case KeyCode.KEY_W:\n        setMoveForward(false);\n        break;\n      case KeyCode.KEY_S:\n        setMoveBack(false);\n        break;\n      case KeyCode.KEY_A:\n        setMoveLeft(false);\n        break;\n      case KeyCode.KEY_D:\n        setMoveRight(false);\n        break;\n      case KeyCode.KEY_SPACE:\n        setMoveUp(false);\n        break;\n      case KeyCode.KEY_SHIFT:\n        setMoveDown(false);\n        break;\n      default:\n        break;\n    }\n  };\n\n  useEffect(() => {\n    domElement.addEventListener('mousedown', onMouseDown, false);\n    document.addEventListener('keydown', onKeyDown, false);\n    document.addEventListener('keyup', onKeyUp, false);\n\n    return () => {\n      domElement.removeEventListener('mousedown', onMouseDown, false);\n      document.removeEventListener('keydown', onKeyDown, false);\n      document.removeEventListener('keyup', onKeyUp, false);\n    };\n  }, [domElement]);\n\n  return (\n    <pointerLockControlsImpl\n      ref={controls}\n      args={[camera, domElement]}\n    />\n  );\n};\n\nPointerLockControls.defaultProps = {\n  movementSpeed: 5,\n};\n\nPointerLockControls.propTypes = {\n  movementSpeed: PropTypes.number,\n};\n\nexport default PointerLockControls;\n","import * as THREE from 'three';\n\nconst terrainMap = (type) => (\n  `${process.env.PUBLIC_URL}/assets/aerial_grass_rock/aerial_grass_rock_${type}_2k.jpg`\n);\nconst waterMap = (type) => (\n  `${process.env.PUBLIC_URL}/assets/water/${type}.jpg`\n);\n\nconst params = Object.freeze({\n  camera: {\n    position: [0, 1, 2.5],\n    movementSpeed: 5,\n  },\n  lights: {\n    directional: [\n      {\n        direction: new THREE.Vector3(0.5, 1, 0.5).normalize(),\n        intensity: 0.75,\n      },\n    ],\n    hemisphere: {\n      skyColor: 'lightblue',\n      groundColor: 'brown',\n      intensity: 0.2,\n    },\n  },\n  fog: {\n    color: 'lightgrey',\n    density: 0.05,\n  },\n  terrain: {\n    size: 20,\n    divisions: 150,\n    position: [0, 0, 0],\n    rotation: [-Math.PI / 2, 0, 0],\n    colorMap: terrainMap('diff'),\n    colorMapScale: [10, 10],\n    normalMap: terrainMap('nor'),\n    displacementMap: terrainMap('disp'),\n    roughnessMap: terrainMap('rough'),\n    metalness: 0.5,\n    uniforms: {\n      heightMajor: 3.0,\n      spacingMajor: 0.25,\n      heightMinor: 0.3,\n      spacingMinor: 1.25,\n    },\n  },\n  water: {\n    normalMap: waterMap('nor'),\n    uniforms: {\n      height: -0.3,\n      speed: 2,\n      kAmbient: 0.1,\n      kDiffuse: 0.6,\n      kSpecular: 0.8,\n      shininess: 128.0,\n      baseColor: 'lightblue',\n    },\n  },\n  tileSideLength: 3,\n  epsilon: 1e-7,\n});\n\nexport default params;\n","import PointerLockControls from './PointerLockControls';\n\nexport default PointerLockControls;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  listItemText: {\n    width: theme.spacing(25),\n  },\n}));\n\nexport default useStyles;\n","import ListSection from './ListSection';\n\nexport default ListSection;\n","import React, { memo } from 'react';\nimport PropTypes from 'prop-types';\nimport {\n  ListItem,\n  ListItemText,\n  ListSubheader,\n  Slider,\n} from '@material-ui/core';\n\nimport useStyles from './styles';\n\n// Side panel on left\nconst ListSection = ({\n  sectionName,\n  optionsEnum,\n  options,\n  setOptions,\n}) => {\n  const styles = useStyles();\n\n  return (\n    <>\n      <ListSubheader>{ sectionName }</ListSubheader>\n      {\n        optionsEnum.map(({\n          displayName,\n          name,\n          min,\n          max,\n          step,\n        }) => (\n          <ListItem dense key={name}>\n            <ListItemText className={styles.listItemText}>{ displayName }</ListItemText>\n            <Slider\n              component=\"div\"\n              color=\"secondary\"\n              min={min}\n              max={max}\n              step={step}\n              valueLabelDisplay=\"auto\"\n              value={options[name]}\n              onChange={(e, value) => setOptions(name, value)}\n            />\n          </ListItem>\n        ))\n      }\n    </>\n  );\n};\n\nListSection.propTypes = {\n  sectionName: PropTypes.string.isRequired,\n  optionsEnum: PropTypes.arrayOf(PropTypes.shape({\n    displayName: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    min: PropTypes.number.isRequired,\n    max: PropTypes.number.isRequired,\n    step: PropTypes.number.isRequired,\n  })).isRequired,\n  options: PropTypes.objectOf(PropTypes.number).isRequired,\n  setOptions: PropTypes.func.isRequired,\n};\n\nexport default memo(ListSection);\n","/*\n * Enums for action types\n * Action type strings should be unique across enums since all reducers\n * are combined\n * Convention: ActionGroup_UNIQUE_LABEL\n */\n\nexport const TerrainAction = Object.freeze({\n  OPTIONS: 'TerrainAction_OPTIONS',\n  RESET_OPTIONS: 'TerrainAction_RESET_OPTIONS',\n});\n\nexport const FogAction = Object.freeze({\n  OPTIONS: 'FogAction_OPTIONS',\n  RESET_OPTIONS: 'FogAction_RESET_OPTIONS',\n});\n\nexport const WaterAction = Object.freeze({\n  OPTIONS: 'WaterAction_OPTIONS',\n  RESET_OPTIONS: 'WaterAction_RESET_OPTIONS',\n});\n","// eslint-disable-next-line import/prefer-default-export\nexport const getFogOptions = (state) => state.fog.options;\n","// eslint-disable-next-line import/prefer-default-export\nexport const getTerrainOptions = (state) => state.terrain.options;\n","// eslint-disable-next-line import/prefer-default-export\nexport const getWaterOptions = (state) => state.water.options;\n","export const FogOptions = [\n  {\n    displayName: 'Density',\n    name: 'density',\n    min: 0,\n    max: 0.5,\n    step: 0.001,\n  },\n];\n\nexport const TerrainOptions = [\n  {\n    displayName: 'Height Major',\n    name: 'heightMajor',\n    min: 0,\n    max: 10,\n    step: 0.1,\n  },\n  {\n    displayName: 'Spacing Major',\n    name: 'spacingMajor',\n    min: 0,\n    max: 1.0,\n    step: 0.01,\n  },\n  {\n    displayName: 'Height Minor',\n    name: 'heightMinor',\n    min: 0,\n    max: 1,\n    step: 0.01,\n  },\n  {\n    displayName: 'Spacing Minor',\n    name: 'spacingMinor',\n    min: 0,\n    max: 5.0,\n    step: 0.05,\n  },\n];\n\nexport const WaterOptions = [\n  {\n    displayName: 'Height',\n    name: 'height',\n    min: -5,\n    max: 5,\n    step: 0.1,\n  },\n  {\n    displayName: 'Speed',\n    name: 'speed',\n    min: 1,\n    max: 4,\n    step: 0.1,\n  },\n];\n","import { makeStyles } from '@material-ui/core/styles';\n\nexport const SIDE_DRAWER_WIDTH = '20%';\n\nconst useStyles = makeStyles((theme) => ({\n  sideDrawer: {\n    width: SIDE_DRAWER_WIDTH,\n    overflowX: 'hidden',\n  },\n  list: {\n    display: 'flex',\n    flexDirection: 'column',\n    height: '100%',\n  },\n  options: {\n    flexGrow: 1,\n  },\n  resetButton: {\n    color: theme.palette.secondary.light,\n  },\n}));\n\nexport default useStyles;\n","import SideDrawer from './SideDrawer';\n\nexport default SideDrawer;\n","import React, { useCallback, memo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  Box,\n  Drawer,\n  List,\n  ListItem,\n  ListItemText,\n} from '@material-ui/core';\n\nimport ListSection from 'app/side-drawer/list-section';\nimport { resetFogOptions, setFogOptions } from 'state/fog/actions';\nimport { resetTerrainOptions, setTerrainOptions } from 'state/terrain/actions';\nimport { resetWaterOptions, setWaterOptions } from 'state/water/actions';\nimport { getFogOptions } from 'state/fog/selectors';\nimport { getTerrainOptions } from 'state/terrain/selectors';\nimport { getWaterOptions } from 'state/water/selectors';\nimport { FogOptions, TerrainOptions, WaterOptions } from 'app/side-drawer/options';\n\nimport useStyles from './styles';\n\n// Side panel on left\nconst SideDrawer = () => {\n  const styles = useStyles();\n  const dispatch = useDispatch();\n\n  const resetAll = () => {\n    dispatch(resetFogOptions());\n    dispatch(resetTerrainOptions());\n    dispatch(resetWaterOptions());\n  };\n\n  const terrainOptions = useSelector(getTerrainOptions);\n  const fogOptions = useSelector(getFogOptions);\n  const waterOptions = useSelector(getWaterOptions);\n\n  const fogSetOptions = useCallback((name, value) => dispatch(\n    setFogOptions(name, value),\n  ), [dispatch]);\n\n  const terrainSetOptions = useCallback((name, value) => dispatch(\n    setTerrainOptions(name, value),\n  ), [dispatch]);\n\n  const waterSetOptions = useCallback((name, value) => dispatch(\n    setWaterOptions(name, value),\n  ), [dispatch]);\n\n  return (\n    <Drawer\n      className={styles.sideDrawer}\n      variant=\"permanent\"\n      classes={{\n        paper: styles.sideDrawer,\n      }}\n    >\n      <List className={styles.list}>\n        <Box className={styles.options}>\n          <ListSection\n            sectionName=\"Fog\"\n            optionsEnum={FogOptions}\n            options={fogOptions}\n            setOptions={fogSetOptions}\n          />\n          <ListSection\n            sectionName=\"Terrain\"\n            optionsEnum={TerrainOptions}\n            options={terrainOptions}\n            setOptions={terrainSetOptions}\n          />\n          <ListSection\n            sectionName=\"Water\"\n            optionsEnum={WaterOptions}\n            options={waterOptions}\n            setOptions={waterSetOptions}\n          />\n        </Box>\n        <ListItem\n          button\n          dense\n          onClick={resetAll}\n        >\n          <ListItemText\n            primary=\"Reset all\"\n            classes={{\n              primary: styles.resetButton,\n            }}\n          />\n        </ListItem>\n      </List>\n    </Drawer>\n  );\n};\n\nexport default memo(SideDrawer);\n","import { FogAction } from 'state/action-types';\n\nexport const setFogOptions = (name, value) => ({\n  type: FogAction.OPTIONS,\n  name,\n  value,\n});\n\nexport const resetFogOptions = () => ({\n  type: FogAction.RESET_OPTIONS,\n});\n","import { TerrainAction } from 'state/action-types';\n\nexport const setTerrainOptions = (name, value) => ({\n  type: TerrainAction.OPTIONS,\n  name,\n  value,\n});\n\nexport const resetTerrainOptions = () => ({\n  type: TerrainAction.RESET_OPTIONS,\n});\n","import { WaterAction } from 'state/action-types';\n\nexport const setWaterOptions = (name, value) => ({\n  type: WaterAction.OPTIONS,\n  name,\n  value,\n});\n\nexport const resetWaterOptions = () => ({\n  type: WaterAction.RESET_OPTIONS,\n});\n","import { makeStyles } from '@material-ui/core/styles';\nimport { SIDE_DRAWER_WIDTH } from 'app/side-drawer/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  backdrop: {\n    width: `calc(100% - ${SIDE_DRAWER_WIDTH})`,\n    left: SIDE_DRAWER_WIDTH,\n    zIndex: theme.zIndex.drawer,\n  },\n}));\n\nexport default useStyles;\n","import Instructions from './Instructions';\n\nexport default Instructions;\n","import React, { useState } from 'react';\nimport { Backdrop, Typography } from '@material-ui/core';\nimport useStyles from './styles';\n\nconst Instructions = () => {\n  const styles = useStyles();\n\n  const [open, setOpen] = useState(true);\n\n  return (\n    <Backdrop\n      className={styles.backdrop}\n      open={open}\n      onClick={() => setOpen(false)}\n    >\n      <div>\n        <Typography\n          variant=\"h3\"\n          color=\"textPrimary\"\n          align=\"center\"\n          paragraph\n        >\n          Terrene\n        </Typography>\n        <Typography\n          variant=\"body1\"\n          color=\"textPrimary\"\n          align=\"center\"\n        >\n          Move: WASD\n        </Typography>\n        <Typography\n          variant=\"body1\"\n          color=\"textPrimary\"\n          align=\"center\"\n        >\n          Ascend/Descend: Space/Shift\n        </Typography>\n        <Typography\n          variant=\"body1\"\n          color=\"textPrimary\"\n          align=\"center\"\n        >\n          Enable/Disable Controls: Click/Esc\n        </Typography>\n      </div>\n    </Backdrop>\n  );\n};\n\nexport default Instructions;\n","import { GPU } from 'gpu.js';\n\nimport perlinNoiseShader from 'shaders/noise/perlin-noise.glsl';\n\nclass TerrainGenerator {\n  constructor() {\n    this.gpu = new GPU();\n\n    this.elevationKernel = this.gpu.createKernel(`function (\n      vertices, position, heightMajor, spacingMajor, heightMinor, spacingMinor,\n    ) {\n      const vertex = vertices[this.thread.x];\n      const x = vertex[0] + position[0];\n      const z = vertex[1] + position[1];\n\n      let elevation = 0.0;\n      /* eslint-disable no-undef */\n      elevation += heightMajor * perlinNoise([x * spacingMajor, z * spacingMajor]);\n      elevation += heightMinor * perlinNoise([x * spacingMinor, z * spacingMinor]);\n      /* eslint-enable no-undef */\n      return elevation;\n    }`)\n      .setDynamicOutput(true)\n      .setArgumentTypes({\n        vertices: 'Array1D(2)',\n        position: 'Array(2)',\n        heightMajor: 'Float',\n        spacingMajor: 'Float',\n        heightMinor: 'Float',\n        spacingMinor: 'Float',\n      })\n      .addNativeFunction('perlinNoise', perlinNoiseShader);\n  }\n\n  generateElevation(\n    vertices, numVertices, position, heightMajor, spacingMajor, heightMinor, spacingMinor,\n  ) {\n    this.elevationKernel.setOutput([numVertices]);\n    return this.elevationKernel(\n      vertices, position, heightMajor, spacingMajor, heightMinor, spacingMinor,\n    );\n  }\n}\n\nexport default TerrainGenerator;\n","export default \"#define GLSLIFY 1\\n//\\tClassic Perlin 2D Noise \\n//\\tby Stefan Gustavson\\n//  https://gist.github.com/patriciogonzalezvivo/670c22f3966e662d2f83\\n\\n// Make sure perlin noise is the first function, so we can use it GPU.js\\nfloat perlinNoise(vec2 P);\\n\\nvec4 permute(vec4 x) {\\n  return mod((x * 34.0 + 1.0) * x, 289.0);\\n}\\n\\nvec2 fade(vec2 t) {\\n  return t * t * t * (t * (t * 6.0 - 15.0) + 10.0);\\n}\\n\\nfloat perlinNoise(vec2 P) {\\n  vec4 Pi = floor(P.xyxy) + vec4(0.0, 0.0, 1.0, 1.0);\\n  vec4 Pf = fract(P.xyxy) - vec4(0.0, 0.0, 1.0, 1.0);\\n  Pi = mod(Pi, 289.0); // To avoid truncation effects in permutation\\n  vec4 ix = Pi.xzxz;\\n  vec4 iy = Pi.yyww;\\n  vec4 fx = Pf.xzxz;\\n  vec4 fy = Pf.yyww;\\n  vec4 i = permute(permute(ix) + iy);\\n  vec4 gx = 2.0 * fract(i * 0.0243902439) - 1.0; // 1/41 = 0.024...\\n  vec4 gy = abs(gx) - 0.5;\\n  vec4 tx = floor(gx + 0.5);\\n  gx = gx - tx;\\n  vec2 g00 = vec2(gx.x,gy.x);\\n  vec2 g10 = vec2(gx.y,gy.y);\\n  vec2 g01 = vec2(gx.z,gy.z);\\n  vec2 g11 = vec2(gx.w,gy.w);\\n  vec4 norm = 1.79284291400159 - 0.85373472095314 * \\n    vec4(dot(g00, g00), dot(g01, g01), dot(g10, g10), dot(g11, g11));\\n  g00 *= norm.x;\\n  g01 *= norm.y;\\n  g10 *= norm.z;\\n  g11 *= norm.w;\\n  float n00 = dot(g00, vec2(fx.x, fy.x));\\n  float n10 = dot(g10, vec2(fx.y, fy.y));\\n  float n01 = dot(g01, vec2(fx.z, fy.z));\\n  float n11 = dot(g11, vec2(fx.w, fy.w));\\n  vec2 fade_xy = fade(Pf.xy);\\n  vec2 n_x = mix(vec2(n00, n01), vec2(n10, n11), fade_xy.x);\\n  float n_xy = mix(n_x.x, n_x.y, fade_xy.y);\\n  return 2.3 * n_xy;\\n}\\n\\n\";","import * as THREE from 'three';\n\nimport sceneParams from 'app/scene/params';\n\nclass TerrainShaderMaterial extends THREE.MeshStandardMaterial {\n  constructor(props) {\n    super({\n      ...props,\n      side: THREE.DoubleSide,\n    });\n\n    const { terrain } = sceneParams;\n\n    const textureLoader = new THREE.TextureLoader();\n\n    const colorMap = textureLoader.load(terrain.colorMap);\n    colorMap.wrapS = THREE.RepeatWrapping;\n    colorMap.wrapT = THREE.RepeatWrapping;\n    colorMap.repeat.set(...terrain.colorMapScale);\n    colorMap.updateMatrix();\n\n    const normalMap = textureLoader.load(terrain.normalMap);\n    normalMap.wrapS = THREE.RepeatWrapping;\n    normalMap.wrapT = THREE.RepeatWrapping;\n\n    const displacementMap = textureLoader.load(terrain.displacementMap);\n    displacementMap.wrapS = THREE.RepeatWrapping;\n    displacementMap.wrapT = THREE.RepeatWrapping;\n\n    const roughnessMap = textureLoader.load(terrain.roughnessMap);\n    roughnessMap.wrapS = THREE.RepeatWrapping;\n    roughnessMap.wrapT = THREE.RepeatWrapping;\n\n    this.map = colorMap;\n    this.normalMap = normalMap;\n    this.normalMapType = THREE.TangentSpaceNormalMap;\n    this.displacementMap = displacementMap;\n    this.roughnessMap = roughnessMap;\n    this.metalness = terrain.metalness;\n  }\n}\n\nexport default TerrainShaderMaterial;\n","import Terrain from './Terrain';\n\nexport default Terrain;\n","import React, {\n  useMemo,\n  useEffect,\n  useRef,\n  createRef,\n  memo,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport { useThree } from 'react-three-fiber';\nimport PropTypes from 'prop-types';\n\nimport sceneParams from 'app/scene/params';\nimport TerrainGenerator from 'app/scene/terrain/TerrainGenerator';\nimport TerrainShaderMaterial from 'app/scene/terrain/TerrainShaderMaterial';\nimport { getTerrainOptions } from 'state/terrain/selectors';\n\nconst Terrain = ({ tileOffsets, numTiles }) => {\n  const tiles = useMemo(() => [...new Array(numTiles).keys()], [numTiles]);\n  const planes = useRef(tiles.map(() => createRef()));\n  const { gl } = useThree();\n  const { terrain } = sceneParams;\n\n  const terrainGenerator = useMemo(() => new TerrainGenerator(), []);\n  const terrainShaderMaterial = useMemo(() => new TerrainShaderMaterial(), []);\n  const terrainOptions = useSelector(getTerrainOptions);\n\n  useEffect(() => {\n    const context = gl.getContext();\n    const maxTextureSize = context.getParameter(context.MAX_TEXTURE_SIZE);\n\n    tileOffsets.forEach((offset, offsetIndex) => {\n      const { position, geometry: { attributes } } = planes.current[offsetIndex].current;\n      position.set(...offset, 0);\n\n      const { array } = attributes.position;\n      const vertices = [];\n      // Create vertex array of x, y elements from flat position array\n      for (let i = 0; i < array.length; i += 3) {\n        vertices.push([array[i], array[i + 1]]);\n      }\n\n      const vertexBatchSize = Math.min(maxTextureSize, vertices.length);\n      for (let i = 0; i < vertices.length; i += vertexBatchSize) {\n        const vertexBatch = vertices.slice(i, i + vertexBatchSize);\n        const terrainElevations = terrainGenerator.generateElevation(\n          vertexBatch,\n          vertexBatch.length,\n          offset,\n          terrainOptions.heightMajor,\n          terrainOptions.spacingMajor,\n          terrainOptions.heightMinor,\n          terrainOptions.spacingMinor,\n        );\n        // Set the z components in the position array\n        for (let j = 0; j < vertexBatch.length; j += 1) {\n          array[(j + i) * 3 + 2] = terrainElevations[j];\n        }\n      }\n      attributes.position.needsUpdate = true;\n    });\n  }, [gl, terrainGenerator, terrainOptions, tileOffsets]);\n\n  return (\n    <group rotation={terrain.rotation}>\n      {\n        tiles.map((value, index) => (\n          <mesh\n            ref={planes.current[index]}\n            key={String(value)}\n            material={terrainShaderMaterial}\n          >\n            <planeBufferGeometry\n              attach=\"geometry\"\n              args={[terrain.size, terrain.size, terrain.divisions, terrain.divisions]}\n            />\n          </mesh>\n        ))\n      }\n    </group>\n  );\n};\n\nTerrain.propTypes = {\n  tileOffsets: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)).isRequired,\n  numTiles: PropTypes.number.isRequired,\n};\n\nexport default memo(Terrain);\n","import * as THREE from 'three';\n\nimport sceneParams from 'app/scene/params';\n\nimport waterVS from 'shaders/water/water.vs.glsl';\nimport waterFS from 'shaders/water/water.fs.glsl';\n\nclass WaterShaderMaterial extends THREE.ShaderMaterial {\n  constructor(props) {\n    super({\n      ...props,\n      side: THREE.DoubleSide,\n      vertexShader: waterVS,\n      fragmentShader: waterFS,\n      lights: true,\n      fog: true,\n    });\n\n    const { water } = sceneParams;\n\n    const textureLoader = new THREE.TextureLoader();\n\n    const normalMap = textureLoader.load(water.normalMap);\n    normalMap.wrapS = THREE.RepeatWrapping;\n    normalMap.wrapT = THREE.RepeatWrapping;\n\n    Object.assign(this.uniforms,\n      THREE.UniformsLib.lights,\n      THREE.UniformsLib.fog,\n      {\n        normalMap: { value: normalMap },\n        kAmbient: { value: water.uniforms.kAmbient },\n        kDiffuse: { value: water.uniforms.kDiffuse },\n        kSpecular: { value: water.uniforms.kSpecular },\n        shininess: { value: water.uniforms.shininess },\n        baseColor: { value: new THREE.Color(water.uniforms.baseColor) },\n        time: { value: 0 },\n      });\n  }\n}\n\nexport default WaterShaderMaterial;\n","export default \"#version 300 es\\n#define GLSLIFY 1\\n\\nout vec3 worldPos;\\nout vec2 texCoords;\\n\\n#include <fog_pars_vertex>\\n\\nvoid main() {\\n  vec4 worldPos4 = modelMatrix * vec4(position, 1.0);\\n  vec4 mvPosition = viewMatrix * worldPos4;\\n  worldPos = worldPos4.xyz;\\n  texCoords = uv;\\n\\n  gl_Position = projectionMatrix * mvPosition;\\n\\n  #include <fog_vertex>\\n}\";","export default \"#version 300 es\\n#define GLSLIFY 1\\n\\n// Adapted from https://29a.ch/slides/2012/webglwater/\\n\\nin vec3 worldPos;\\nin vec2 texCoords;\\n\\nout vec4 out_FragColor;\\n#define gl_FragColor out_FragColor\\n\\nuniform sampler2D normalMap;\\nuniform float time;\\n\\nuniform float kAmbient;\\nuniform float kDiffuse;\\nuniform float kSpecular;\\nuniform float shininess;\\nuniform vec3 baseColor;\\n\\n#include <common>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n\\nvec4 getNoise(vec2 uv) {\\n  vec2 uvs[4];\\n  uvs[0] = uv / 103.0 + vec2(time / 17.0, time / 29.0);\\n  uvs[1] = uv / 107.0 - vec2(time / -19.0, time / 31.0);\\n  uvs[2] = uv / vec2(897.0, 983.0) + vec2(time / 101.0, time / 97.0);\\n  uvs[3] = uv / vec2(991.0, 877.0) - vec2(time / 109.0, time / -113.0);\\n\\n  vec4 noise = vec4(0.0);\\n  for (int i = 0; i < 4; i++) {\\n    noise += texture(normalMap, uvs[i] + vec2(time) / 100.0);\\n  }\\n  return 0.5 * noise - 1.0;\\n}\\n\\nvec3 sunlight(DirectionalLight sun, vec3 viewDir, vec3 normalDir, vec3 diffuseColor) {\\n  // `sun.direction` is in view space\\n  vec3 lightDir = normalize(inverse(mat3(viewMatrix)) * sun.direction);\\n  vec3 halfDir = normalize(lightDir + viewDir);\\n\\n  vec3 diffuse = kDiffuse * diffuseColor * max(dot(normalDir, lightDir), 0.0);\\n  vec3 specular = vec3(kSpecular * pow(max(dot(normalDir, halfDir), 0.0), shininess));\\n\\n  return (diffuse + specular) * sun.color;\\n}\\n\\nvoid main() {\\n  vec4 noise = getNoise(worldPos.xz * 50.0);\\n  vec3 normalDir = normalize(noise.xzy * vec3(2.0, 1.0, 2.0));\\n  vec3 viewDir = normalize(cameraPosition - worldPos);\\n\\n  vec3 color = kAmbient * baseColor;\\n  color += sunlight(directionalLights[0], viewDir, normalDir, baseColor);\\n  out_FragColor = vec4(color, 1.0);\\n\\n  #include <fog_fragment>\\n}\";","import Water from './Water';\n\nexport default Water;\n","import React, {\n  useMemo,\n  useEffect,\n  useRef,\n  createRef,\n  memo,\n} from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFrame } from 'react-three-fiber';\nimport PropTypes from 'prop-types';\n\nimport WaterShaderMaterial from 'app/scene/water/WaterShaderMaterial';\nimport sceneParams from 'app/scene/params';\nimport { getWaterOptions } from 'state/water/selectors';\n\nconst Water = ({ tileOffsets, numTiles }) => {\n  const tiles = useMemo(() => [...new Array(numTiles).keys()], [numTiles]);\n  const planes = useRef(tiles.map(() => createRef()));\n  const { terrain } = sceneParams;\n\n  const waterOptions = useSelector(getWaterOptions);\n  const waterShaderMaterial = useMemo(() => new WaterShaderMaterial(), []);\n\n  useEffect(() => {\n    tileOffsets.forEach((offset, index) => {\n      planes.current[index].current.position.set(...offset, waterOptions.height);\n    });\n  }, [tileOffsets, waterOptions.height]);\n\n  useFrame(() => {\n    const time = (new Date()).getTime();\n    waterShaderMaterial.uniforms.time.value = (time % 1e7) / 10 ** (5 - waterOptions.speed);\n  });\n\n  return (\n    <group rotation={terrain.rotation}>\n      {\n        tiles.map((value, index) => (\n          <mesh\n            ref={planes.current[index]}\n            key={String(value)}\n            material={waterShaderMaterial}\n          >\n            <planeBufferGeometry\n              attach=\"geometry\"\n              args={[terrain.size, terrain.size, 1, 1]}\n            />\n          </mesh>\n        ))\n      }\n    </group>\n  );\n};\n\nWater.propTypes = {\n  tileOffsets: PropTypes.arrayOf(PropTypes.arrayOf(PropTypes.number)).isRequired,\n  numTiles: PropTypes.number.isRequired,\n};\n\nexport default memo(Water);\n","import Tiles from './Tiles';\n\nexport default Tiles;\n","class Tiles {\n  constructor(sideLength, tileSize) {\n    this.sideLength = sideLength;\n    this.tileSize = tileSize;\n    this.numTiles = sideLength ** 2;\n  }\n\n  static offsetsAreEqual(prev, next) {\n    for (let i = 0; i < 9; i += 1) {\n      for (let j = 0; j < 2; j += 1) {\n        if (prev[i][j] !== next[i][j]) {\n          return false;\n        }\n      }\n    }\n    return true;\n  }\n\n  getOffsets(x, y) {\n    const tileX = Math.floor(x / this.tileSize) * this.tileSize;\n    const tileY = Math.floor(y / this.tileSize) * this.tileSize;\n\n    const newTiles = [];\n\n    for (let i = -this.sideLength / 2; i < this.sideLength / 2; i += 1) {\n      for (let j = -this.sideLength / 2; j < this.sideLength / 2; j += 1) {\n        newTiles.push([tileX + (j + 0.5) * this.tileSize, tileY + (i + 0.5) * this.tileSize]);\n      }\n    }\n\n    return newTiles;\n  }\n}\n\nexport default Tiles;\n","import Scene from './Scene';\n\nexport default Scene;\n","import React, { memo, useState, useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useThree, useFrame } from 'react-three-fiber';\n\nimport sceneParams from 'app/scene/params';\nimport Terrain from 'app/scene/terrain';\nimport Water from 'app/scene/water';\nimport { getFogOptions } from 'state/fog/selectors';\nimport Tiles from 'app/scene/tiles';\n\nconst Scene = () => {\n  const { camera } = useThree();\n  const { terrain, lights: { hemisphere, directional }, tileSideLength } = sceneParams;\n\n  const fogOptions = useSelector(getFogOptions);\n\n  const tiles = useMemo(() => new Tiles(tileSideLength, terrain.size),\n    [tileSideLength, terrain.size]);\n  const [tileOffsets, setTileOffsets] = useState(tiles.getOffsets(0, 0));\n\n  useFrame(() => {\n    const { position } = camera;\n    const x = position.x + terrain.size / 2;\n    const y = -position.z + terrain.size / 2;\n\n    const newTileOffsets = tiles.getOffsets(x, y);\n    if (!Tiles.offsetsAreEqual(newTileOffsets, tileOffsets)) {\n      setTileOffsets(newTileOffsets);\n    }\n  });\n\n  return (\n    <>\n      <hemisphereLight\n        args={[hemisphere.skyColor, hemisphere.groundColor, hemisphere.intensity]}\n      />\n      {\n        directional.map(({ direction, intensity }) => (\n          <directionalLight\n            position={direction}\n            intensity={intensity}\n            key={`${direction}-${intensity}`}\n          />\n        ))\n      }\n      <fogExp2\n        attach=\"fog\"\n        args={[fogOptions.color, fogOptions.density]}\n      />\n      <Terrain tileOffsets={tileOffsets} numTiles={tiles.numTiles} />\n      <Water tileOffsets={tileOffsets} numTiles={tiles.numTiles} />\n    </>\n  );\n};\n\nexport default memo(Scene);\n","import update from 'immutability-helper';\n\nimport { TerrainAction } from 'state/action-types';\nimport sceneParams from 'app/scene/params';\nimport { TerrainOptions } from 'app/side-drawer/options';\n\nconst initialState = {\n  options: {},\n};\n\nTerrainOptions.forEach(({ name }) => {\n  initialState.options[name] = sceneParams.terrain.uniforms[name];\n});\n\nconst terrain = (state = initialState, action) => {\n  switch (action.type) {\n    case TerrainAction.OPTIONS:\n      return update(state, {\n        options: {\n          [action.name]: { $set: action.value },\n        },\n      });\n    case TerrainAction.RESET_OPTIONS:\n      return {\n        ...state,\n        options: initialState.options,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default terrain;\n","import update from 'immutability-helper';\n\nimport { FogAction } from 'state/action-types';\nimport sceneParams from 'app/scene/params';\nimport { FogOptions } from 'app/side-drawer/options';\n\nconst initialState = {\n  options: {},\n};\n\nFogOptions.forEach(({ name }) => {\n  initialState.options[name] = sceneParams.fog[name];\n});\n\nconst fog = (state = initialState, action) => {\n  switch (action.type) {\n    case FogAction.OPTIONS:\n      return update(state, {\n        options: {\n          [action.name]: { $set: action.value },\n        },\n      });\n    case FogAction.RESET_OPTIONS:\n      return {\n        ...state,\n        options: initialState.options,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default fog;\n","import update from 'immutability-helper';\n\nimport { WaterAction } from 'state/action-types';\nimport sceneParams from 'app/scene/params';\nimport { WaterOptions } from 'app/side-drawer/options';\n\nconst initialState = {\n  options: {},\n};\n\nWaterOptions.forEach(({ name }) => {\n  initialState.options[name] = sceneParams.water.uniforms[name];\n});\n\nconst water = (state = initialState, action) => {\n  switch (action.type) {\n    case WaterAction.OPTIONS:\n      return update(state, {\n        options: {\n          [action.name]: { $set: action.value },\n        },\n      });\n    case WaterAction.RESET_OPTIONS:\n      return {\n        ...state,\n        options: initialState.options,\n      };\n    default:\n      return state;\n  }\n};\n\nexport default water;\n","import {\n  combineReducers,\n  createStore,\n  compose,\n  applyMiddleware,\n} from 'redux';\nimport { createLogger } from 'redux-logger';\n\nimport terrain from 'state/terrain/reducers';\nimport fog from 'state/fog/reducers';\nimport water from 'state/water/reducers';\n\nconst middlewares = [];\n\nif (process.env.NODE_ENV === 'development') {\n  // Log redux updates to console if env var `REACT_APP_REDUX_LOGGER` is set\n  if (process.env.REACT_APP_REDUX_LOGGER) {\n    const reduxLogger = createLogger({\n      duration: true,\n      diff: true,\n    });\n    middlewares.push(reduxLogger);\n  }\n}\n\nconst store = compose(applyMiddleware(...middlewares))(createStore)(\n  combineReducers({\n    terrain,\n    fog,\n    water,\n  }),\n);\n\nexport default store;\n","import { createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  palette: {\n    type: 'dark',\n  },\n});\n\nexport default theme;\n","import { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  app: {\n    display: 'flex',\n    height: '100%',\n  },\n  canvas: {\n    background: 'lightgrey',\n  },\n  stats: {\n    left: 'auto !important',\n    top: 'auto !important',\n    right: '0px !important',\n    bottom: '0px !important',\n    marginRight: theme.spacing(1),\n    marginBottom: theme.spacing(1),\n  },\n}));\n\nexport default useStyles;\n","import App from './App';\n\nexport default App;\n","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport { ThemeProvider } from '@material-ui/core/styles';\nimport { Provider } from 'react-redux';\nimport { Canvas } from 'react-three-fiber';\nimport { PerspectiveCamera, Stats } from 'drei';\nimport PointerLockControls from 'app/pointer-lock-controls';\n\nimport SideDrawer from 'app/side-drawer';\nimport Instructions from 'app/instructions';\nimport Scene from 'app/scene';\nimport sceneParams from 'app/scene/params';\nimport store from 'state/store';\n\nimport theme from './theme';\nimport useStyles from './styles';\n\nconst App = () => {\n  const styles = useStyles();\n\n  return (\n    <Box className={styles.app}>\n      <ThemeProvider theme={theme}>\n        <SideDrawer />\n        <Instructions />\n        <Canvas\n          className={styles.canvas}\n          gl2\n        >\n          <Stats className={styles.stats} />\n          <Provider store={store}>\n            <PointerLockControls\n              movementSpeed={sceneParams.camera.movementSpeed}\n            />\n            <PerspectiveCamera\n              position={sceneParams.camera.position}\n              makeDefault\n            />\n            <Scene />\n          </Provider>\n        </Canvas>\n      </ThemeProvider>\n    </Box>\n  );\n};\n\nexport default App;\n","import 'wdyr';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport logger from 'js-logger';\nimport { WEBGL } from 'three/examples/jsm/WebGL';\n\nimport App from 'app';\nimport store from 'state/store';\n\nimport './index.css';\n\n// Set up logger that prints log level at the beginning of all messages\nlogger.useDefaults({\n  formatter: (messages, context) => {\n    messages.unshift(`${context.level.name}`);\n  },\n});\n\nconst RootComponent = () => {\n  // WebGL 2 is required - fail to load the app if not available\n  if (!WEBGL.isWebGL2Available()) {\n    return <>{ WEBGL.getWebGL2ErrorMessage().textContent }</>;\n  }\n\n  return (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n};\n\nReactDOM.render(\n  <RootComponent />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}